# Default configuration file for Metador.
#
# You can and should override some of those values in your own config.
# All entries that are missing in your config will take the following default values.
#
# For readability, you can remove everything that you do not need to change.
#
# NOTE: relative file/directory paths will be interpreted relative to current directory,
# NOT relative to location of this config.
##########################################################################################

[metador]
# Site where metador is served (without trailing slash)
site = 'http://localhost:8000'
# The endpoint URL for file uploads from client. Must be accessible from client.
# It depends on the -base-path of tusd and the way you proxy/route/serve requests to it.
tusd_endpoint = 'http://localhost:1080/files/'
# after that many hours the non-completed datasets have expired and can be cleaned up
incomplete_expire_after = 48

# Directory where JSON Schemas and Dataset Profiles are stored.
# Make sure that all profile files end with .profile.json
# to ensure that they are identified and loaded correctly.
# NOTE: that filenames referencing JSON schemas are relative to profile location.
# NOTE: Only JSON Schema Draft 7 is supported (newest standard supported by jsonschema library).
# NOTE: Profiles are copied into datasets and are not updated for existing datasets
# if you change the profiles or schemas!
profile_dir = 'profiles'
# Location to store all application data and state 
# it will have subdirs "staging" and "complete" for datasets
# and also some temporary files
data_dir = 'metador_data'

[metador.log]
# Granularity of logging.
level = 'INFO'
# Filename where logs go. if not set, only console log is used.
# file = 'metador.log'

################

[orcid]
# Enable ORCID support
enabled = false
# After that many minutes the user sessions expire and they have to sign in again
auth_expire_after = 180

# If provided, the following file must exist + contain the ORCIDs of permitted users.
# If the file itself is empty, then _no one_ can use the instance.
# allowlist_file = 'allowlist.txt'

# You need to get API credentials for your Metador instance in your ORCID account. See:
# https://info.orcid.org/documentation/api-tutorials/api-tutorial-get-and-authenticated-orcid-id/#Get_some_client_credentials
client_id = ''
client_secret = ''

# If true, uses the sandbox servers provided by ORCID (only useful for developers)
sandbox = false
# If true, uses mock of ORCID (works even offline) (only useful for developers)
use_fake = false

################

[uvicorn]
# The host and port used by uvicorn for binding.
# These are only respected if you launch your application using `metador-cli run`.
host = '0.0.0.0'
port = 8000

# Mostly for developers: reload application on code changes.
reload = false
